[build-system]
requires = ["setuptools>=46.4.0"]
build-backend = "setuptools.build_meta"

[project]
name = "watt_df"
description = "A set of tools to manipulate and transform power, energy, and related timeseries data."
authors = [
  { name="R&D team, Eco CO2 company", email="research@ecoco2.com" },
]
readme = "README.md"
requires-python = ">=3.8"
keywords = ["profile"]
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
    "pandas>=2.2.2",
    "numpy>=1.26.0",
    "scipy>=1.13.0",
    "pyarrow>=13",
    "statsmodels>=0.13.0",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://gitlab.ecoco2.com/recherche/watt_df"
"Bug Tracker" = "https://gitlab.ecoco2.com/recherche/watt_df-/issues"

[project.optional-dependencies]
doc = [
    "watt_df[examples]",
    "sphinx",
    "pydata-sphinx-theme",
    "sphinx-gallery",
    "sphinx_design",
    "nbsphinx",
    "pillow",
]
test = [
    "pytest",
    "pytest-cov",
]
examples = [
    "matplotlib",
    "pyarrow",
]
all = [
    "watt_df[test,doc,examples]",
]

[tool.setuptools]
zip-safe = false
[tool.setuptools.packages.find]
where = ["./"]
include = ["watt_df*"]

[tool.setuptools.dynamic]
version = {attr = "watt_df.__version__"}

[tool.ruff]
line-length = 80

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 5

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401"]
"*.ipynb" = ["E402",  # module-import-not-at-top-of-file
             "F401",  # unused-import
            ]

[tool.pytest.ini_options]
addopts = "--cov=watt_df --cov-report term --cov-report xml:cov.xml"  # --lf --last-failed-no-failures none"
testpaths = ["watt_df/tests"]